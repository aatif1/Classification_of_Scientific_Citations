<?xml version="1.0" encoding="iso-8859-1"?>
<acldoc acl_id="P04-1064">
	

	<s id="1">
		 Aligning words using matrix factorisation Cyril Goutte , Kenji Yamada and Eric Gaussier Xerox Research Centre Europe 6 , chemin de Maupertuis F-38240 Meylan , France Cyril.Goutte,Kenji.Yamada,Eric.Gaussier@xrce.xerox.com Abstract Aligning words from sentences which are mutual translations is an important problem in different settings , such as bilingual terminology extraction , Machine Translation , or projection of linguistic features . 
	</s>
	

	<s id="2">
		 Here , we view word alignment as matrix factorisation . 
	</s>
	

	<s id="3">
		 In order to produce proper alignments , we show that factors must satisfy a number of constraints such as orthogonality . 
	</s>
	

	<s id="4">
		 We then propose an algorithm for orthogonal non-negative matrix factorisation , based on a probabilistic model of the alignment data , and apply it to word alignment . 
	</s>
	

	<s id="5">
		 This is illustrated on a French-English alignment task from the Hansard . 
	</s>
	

	<s id="6">
		 1 Introduction Aligning words from mutually translated sentences in two different languages is an important and difficult problem . 
	</s>
	

	<s id="7">
		 It is important because a word- aligned corpus is typically used as a first step in order to identify phrases or templates in phrase-based Machine Translation 
		<ref citStr="Och et al. , 1999" id="1" label="CEPF" position="1233">
			( Och et al. , 1999 )
		</ref>
		 , 
		<ref citStr="Tillmann and Xia , 2003" id="2" label="CEPF" position="1263">
			( Tillmann and Xia , 2003 )
		</ref>
		 , ( Koehn et al. , 2003 , sec . 
	</s>
	

	<s id="8">
		 3 ) , or for projecting linguistic annotation across languages 
		<ref citStr="Yarowsky et al. , 2001" id="3" label="CEPF" position="1394">
			( Yarowsky et al. , 2001 )
		</ref>
		 . 
	</s>
	

	<s id="9">
		 Obtaining a word-aligned corpus usually involves training a word-based translation models 
		<ref citStr="Brown et al. , 1993" id="4" label="CEPF" position="1519">
			( Brown et al. , 1993 )
		</ref>
		 in each directions and combining the resulting alignments . 
	</s>
	

	<s id="10">
		 Besides processing time , important issues are completeness and propriety of the resulting alignment , and the ability to reliably identify general Nto-M alignments . 
	</s>
	

	<s id="11">
		 In the following section , we introduce the problem of aligning words from a corpus that is already aligned at the sentence level . 
	</s>
	

	<s id="12">
		 We show how this problem may be phrased in terms of matrix factorisation . 
	</s>
	

	<s id="13">
		 We then identify a number of constraints on word alignment , show that these constraints entail that word alignment is equivalent to orthogonal non-negative matrix factorisation , and we give a novel algorithm that solves this problem . 
	</s>
	

	<s id="14">
		 This is illustrated using data from the shared tasks of the 2003 HLT-NAACL Workshop on Building the licence fee does not increase le droit de permis ne augmente pas Figure 1 : 1-1 , M-1 , 1-N and M-N alignments . 
	</s>
	

	<s id="15">
		 and Using Parallel Texts 
		<ref citStr="Mihalcea and Pedersen , 2003" id="5" label="CEPF" position="2515">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 . 
	</s>
	

	<s id="16">
		 2 Word alignments We address the following problem : Given a source sentence f = fi ... fi ... fI and a target sentence e = el ... ej ... eJ , we wish to find words fi and ej on either side which are aligned , ie in mutual correspondence . 
	</s>
	

	<s id="17">
		 Note that words may be aligned without being directly “dictionary translations” . 
	</s>
	

	<s id="18">
		 In order to have proper alignments , we want to enforce the following constraints : Coverage : Every word on either side must be aligned to at least one word on the other side ( Possibly taking “null” words into account ) . 
	</s>
	

	<s id="19">
		 Transitive closure : If fi is aligned to ej and et , any fk aligned to et must also de aligned to ej . 
	</s>
	

	<s id="20">
		 Under these constraints , there are only 4 types of alignments : 1-1 , 1-N , M-1 and M-N ( fig . 
	</s>
	

	<s id="21">
		 1 ) . 
	</s>
	

	<s id="22">
		 Although the first three are particular cases where N=1 and/or M=1 , the distinction is relevant , because most word-based translation models ( eg IBM models 
		<ref citStr="Brown et al. , 1993" id="6" label="CEPF" position="3518">
			( Brown et al. , 1993 )
		</ref>
		 ) can typically not accommodate general M-N alignments . 
	</s>
	

	<s id="23">
		 We formalise this using the notion of cepts : a cept is a central pivot through which a subset of e- words is aligned to a subset of f -words . 
	</s>
	

	<s id="24">
		 General M-N alignments then correspond to M-1-N alignments from e-words , to a cept , to f -words ( fig . 
	</s>
	

	<s id="25">
		 2 ) . 
	</s>
	

	<s id="26">
		 Cepts naturally guarantee transitive closure as long as each word is connected to a single cept . 
	</s>
	

	<s id="27">
		 In addition , coverage is ensured by imposing that each the licence fee does not increase ( 1 ) ( 2 ) (3)(4) le droit de permis ne augmente pas Figure 2 : Same as figure 1 , using cepts (1)-(4). cepts where without loss of generality , we introduce a diagonal K x K scaling matrix 5 which may give different weights to the different cepts . 
	</s>
	

	<s id="28">
		 As factors F and E contain only positive elements , this is an instance of non-negative matrix factorisation , aka NMF 
		<ref citStr="Lee and Seung , 1999" id="7" label="CEPF" position="4468">
			( Lee and Seung , 1999 )
		</ref>
		 . 
	</s>
	

	<s id="29">
		 Because NMF decomposes a matrix into additive , positive components , it naturally yields a sparse representation . 
	</s>
	

	<s id="30">
		 English words English words In addition , the propriety constraint imposes that words are aligned to exactly one cept , ie each row of E and F has exactly one non-zero component , a property we call extreme sparsity . 
	</s>
	

	<s id="31">
		 With the notation F = [ FZk ] , this means that : bi , bk =~ l , FZk.FZl = 0 Figure 3 : Matrix factorisation of the example from fig . 
	</s>
	

	<s id="32">
		 1 , 2 . 
	</s>
	

	<s id="33">
		 Black squares represent alignments . 
	</s>
	

	<s id="34">
		 word is connected to a cept . 
	</s>
	

	<s id="35">
		 A unique constraint therefore guarantees proper alignments : Propriety : Each word is associated to exactly one cept , and each cept is associated to at least one word on each side . 
	</s>
	

	<s id="36">
		 Note that our use of cepts differs slightly from that of ( Brown et al. , 1993 , sec.3 ) , inasmuch cepts may not overlap , according to our definition . 
	</s>
	

	<s id="37">
		 The motivation for our work is that better word alignments will lead to better translation models . 
	</s>
	

	<s id="38">
		 For example , we may extract better chunks for phrase-based translation models . 
	</s>
	

	<s id="39">
		 In addition , proper alignments ensure that cept-based phrases will cover the entire source and target sentences . 
	</s>
	

	<s id="40">
		 3 Matrix factorisation Alignments between source and target words may be represented by a I x J alignment matrix A= [ aZj ] , such that aZj &gt; 0 if fZ is aligned with ej and aZj = 0 otherwise . 
	</s>
	

	<s id="41">
		 Similarly , given K cepts , words to cepts alignments may be represented by a I x K matrix F and a J x K matrix E , with positive elements indicating alignments . 
	</s>
	

	<s id="42">
		 It is easy to see that matrix A = F x ET then represents the resulting word-to-word alignment ( fig . 
	</s>
	

	<s id="43">
		 3 ) . 
	</s>
	

	<s id="44">
		 Let us now assume that we start from a I x J matrix M = [ mZj ] , which we call the translation matrix , such that mZj &gt; 0 measures the strength of the association between fZ and ej ( large values mean close association ) . 
	</s>
	

	<s id="45">
		 This may be estimated using a translation table , a count ( eg from a N-best list ) , etc. . 
	</s>
	

	<s id="46">
		 Finding a suitable alignment matrix A corresponds to finding factors F and E such that : MPz~Fx5xET ( 1 ) As line i contains a single non-zero element , either FZk or FZl must be 0 . 
	</s>
	

	<s id="47">
		 An immediate consequence is that ~Z FZk.FZl = 0 : columns of F are orthogonal , that is F is an orthogonal matrix ( and similarly , E is orthogonal ) . 
	</s>
	

	<s id="48">
		 Finding the best alignment starting from M therefore reduces to performing a decomposition into orthogonal non-negative factors . 
	</s>
	

	<s id="49">
		 4 An algorithm for Orthogonal Non-negative Matrix Factorisation Standard NMF algorithms 
		<ref citStr="Lee and Seung , 2001" id="8" label="CEPF" position="7201">
			( Lee and Seung , 2001 )
		</ref>
		 do not impose orthogonality between factors . 
	</s>
	

	<s id="50">
		 We propose to perform the Orthogonal Non-negative Matrix Factorisation ( ONMF ) in two stages : We first factorise M using Probabilistic Latent Semantic Analysis , aka PLSA 
		<ref citStr="Hofmann , 1999" id="9" label="CEPF" position="7448">
			( Hofmann , 1999 )
		</ref>
		 , then we orthogonalise factors using a Maximum A Posteriori ( MAP ) assignment of words to cepts . 
	</s>
	

	<s id="51">
		 PLSA models a joint probability P(f , e ) as a mixture of conditionally independent multinomial distributions : P(f , e ) = E P(c)P(f lc)P(elc) ( 2 ) c With F = [ P(f l c ) ] , E = [ P(el c ) ] and 5 = diag(P(c)) , this is exactly eq . 
	</s>
	

	<s id="52">
		 1. Note also that despite the additional matrix 5 , if we set E = [ P(e , c ) ] , then P(f le ) would factor as F x ET , the original NMF formulation ) . 
	</s>
	

	<s id="53">
		 All factors in eq . 
	</s>
	

	<s id="54">
		 2 are ( conditional ) probabilities , and therefore positive , so PLSA also implements NMF . 
	</s>
	

	<s id="55">
		 The parameters are learned from a matrix M = [ mZj ] of ( fZ , ej ) counts , by maximising the likelihood using the iterative re-estimation formula of the Expectation-Maximisation algorithm 
		<ref citStr="Dempster et al. , 1977" id="10" label="CERF" position="8313">
			( Dempster et al. , 1977 )
		</ref>
		 , cf. fig . 
	</s>
	

	<s id="56">
		 4. Convergence is guaranteed , leading to a non-negative factorisation of M . 
	</s>
	

	<s id="57">
		 The second step of our algorithm is to orthogonalise E-step : P(cj fi , ej ) = P(c)P(fijc)P(ej jc ) ( 3 ) EcP(c)P(fijc)P(ejj c ) M-step : P(c) = 1N ij ~ M-step : P(fij c ) a j ~ M-step : P(ej jc ) a i Figure 4 : The EM algorithm iterates these E and M-steps until convergence . 
	</s>
	

	<s id="58">
		 the resulting factors . 
	</s>
	

	<s id="59">
		 Each source word fi is assigned the most probable cept , ie cept c for which P(cI fi ) a P(c)P(fiIc) is maximal . 
	</s>
	

	<s id="60">
		 Factor F is therefore set to : ~1 if k = argmaxc P(cI fi ) Fik a 0 otherwise ( 7 ) where proportionality ensures that column of F sum to 1 , so that F stays a conditional probability matrix . 
	</s>
	

	<s id="61">
		 We proceed similarly for target words ej to orthogonalise E . 
	</s>
	

	<s id="62">
		 Thanks to the MAP assignment , each line of F and E contains exactly one non-zero element . 
	</s>
	

	<s id="63">
		 We saw earlier that this is equivalent to having orthogonal factors . 
	</s>
	

	<s id="64">
		 The result is therefore an orthogonal , non-negative factorisation of the original translation matrix M. 4.1 Number of cepts In general , the number of cepts is unknown and must be estimated . 
	</s>
	

	<s id="65">
		 This corresponds to choosing the number of components in PLSA , a classical model selection problem . 
	</s>
	

	<s id="66">
		 The likelihood may not be used as it always increases as components are added . 
	</s>
	

	<s id="67">
		 A standard approach to optimise the complexity of a mixture model is to maximise the likelihood , penalised by a term that increases with model complexity , such as AIC 
		<ref citStr="Akaike , 1974" id="11" label="CEPF" position="9905">
			( Akaike , 1974 )
		</ref>
		 or BIC 
		<ref citStr="Schwartz , 1978" id="12" label="CEPF" position="9932">
			( Schwartz , 1978 )
		</ref>
		 . 
	</s>
	

	<s id="68">
		 BIC asymptotically chooses the correct model size ( for complete models ) , while AIC always overestimates the number of components , but usually yields good predictive performance . 
	</s>
	

	<s id="69">
		 As the largest possible number of cepts is min(I , J ) , and the smallest is 1 ( all fi aligned to all ej ) , we estimate the optimal number of cepts by maximising AIC or BIC between these two extremes . 
	</s>
	

	<s id="70">
		 4.2 Dealing with null alignments Alignment to a “null” word may be a feature of the underlying statistical model ( eg IBM models ) , or it may be introduced to accommodate words which have a low association measure with all other words . 
	</s>
	

	<s id="71">
		 Using PLSA , we can deal with null alignments in a principled way by introducing a null word on each side ( fo and eo ) , and two null cepts ( “f-null” and “e-null” ) with a 1-1 alignment to the corresponding null word , to ensure that null alignments will only be 1-N or M-1 . 
	</s>
	

	<s id="72">
		 This constraint is easily implemented using proper initial conditions in EM . 
	</s>
	

	<s id="73">
		 Denoting the null cepts as c fO and ceO , 1-1 alignments between null cepts and the corresponding null words impose the conditions : 1 . 
	</s>
	

	<s id="74">
		 P(f0 Ic fO ) = 1 and bi =~ 0 , P(fi Ic fO ) = 0 ; 2 . 
	</s>
	

	<s id="75">
		 P(e0IceO) = 1 and bj =~ 0 , P(ej I ceO ) = 0 . 
	</s>
	

	<s id="76">
		 Stepping through the E-step and M-step equations ( 3–6 ) , we see that these conditions are preserved by each EM iteration . 
	</s>
	

	<s id="77">
		 In order to deal with null alignments , the model is therefore augmented with two null cepts , for which the probabilities are initialised according to the above conditions . 
	</s>
	

	<s id="78">
		 As these are preserved through EM , we maintain proper 1-N and M1 alignments to the null words . 
	</s>
	

	<s id="79">
		 The main difference between null cepts and the other cepts is that we relax the propriety constraint and do not force null cepts to be aligned to at least one word on either side . 
	</s>
	

	<s id="80">
		 This is because in many cases , all words from a sentence can be aligned to non-null words , and do not require any null alignments . 
	</s>
	

	<s id="81">
		 4.3 Modelling noise Most elements of M usually have a non-zero association measure . 
	</s>
	

	<s id="82">
		 This means that for proper alignments , which give zero probability to alignments outside identified blocks , actual observations have exactly 0 probability , ie the log-likelihood of parameters corresponding to proper alignments is undefined . 
	</s>
	

	<s id="83">
		 We therefore refine the model , adding a noise component indexed by c = 0 : P(f , e ) = E P(c)P(f Ic)P(eIc) c&gt;0 +P(c = 0)P(f , eIc = 0 ) The simplest choice for the noise component is a uniform distribution , P(f , eIc = 0 ) a 1 . 
	</s>
	

	<s id="84">
		 E-step and M-steps in eqs . 
	</s>
	

	<s id="85">
		 ( 3–6 ) are unchanged for c &gt; 0 , and the E-step equation for c = 0 is easily adapted : P(c=0I f , e ) a P(c=0)P(f , eIc=0 ) . 
	</s>
	

	<s id="86">
		 5 Example We first illustrate the factorisation process on a simple example . 
	</s>
	

	<s id="87">
		 We use the data provided for mijP(cj fi , ej ) ( 4 ) mijP(cj fi , ej ) ( 5 ) mijP(cj fi , ej ) ( 6 ) the French-English shared task of the 2003 HLTNAACL Workshop on Building and Using Parallel Texts 
		<ref citStr="Mihalcea and Pedersen , 2003" id="13" label="CEPF" position="13085">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 . 
	</s>
	

	<s id="88">
		 The data is from the Canadian Hansard , and reference alignments were originally produced by Franz Och and Hermann Ney 
		<ref citStr="Och and Ney , 2000" id="14" label="CEPF" position="13238">
			( Och and Ney , 2000 )
		</ref>
		 . 
	</s>
	

	<s id="89">
		 Using the entire corpus ( 20 million words ) , we trained English—*French and French—*English IBM4 models using GIZA++ . 
	</s>
	

	<s id="90">
		 For all sentences from the trial and test set ( 37 and 447 sentences ) , we generated up to 100 best alignments for each sentence and in each direction . 
	</s>
	

	<s id="91">
		 For each pair of source and target words ( fZ , ej ) , the association measure mZj is simply the number of times these words were aligned together in the two N-best lists , leading to a count between 0 ( never aligned ) and 200 ( always aligned ) . 
	</s>
	

	<s id="92">
		 We focus on sentence 1023 , from the trial set . 
	</s>
	

	<s id="93">
		 Figure 5 shows the reference alignments together with the generated counts . 
	</s>
	

	<s id="94">
		 There is a background “noise” count of 3 to 5 ( small dots ) and the largest counts are around 145-150 . 
	</s>
	

	<s id="95">
		 The N-best counts seem to give a good idea of the alignments , although clearly there is no chance that our factorisation algorithm will recover the alignment of the two instances of ’de’ to ’need’ , as there is no evidence for it in the data . 
	</s>
	

	<s id="96">
		 The ambiguity that the factorisation will have to address , and that is not easily resolved using , eg , thresholding , is whether ’ont’ should be aligned to ’They’ or to ’need’ . 
	</s>
	

	<s id="97">
		 The N-best count matrix serves as the translation matrix . 
	</s>
	

	<s id="98">
		 We estimate PLSA parameters for K = 1 ... 6 , and find out that AIC and BIC reach their maximum for K = 6 . 
	</s>
	

	<s id="99">
		 We therefore select 6 cepts for this sentence , and produce the alignment matrices shown on figure 6 . 
	</s>
	

	<s id="100">
		 Note that the order of the cepts is arbitrary ( here the first cept correspond ’et’ — ’and’ ) , except for the null cepts which are fixed . 
	</s>
	

	<s id="101">
		 There is a fixed 1-1 correspondence between these null cepts and the corresponding null words on each side , and only the French words ’de’ are mapped to a null cept . 
	</s>
	

	<s id="102">
		 Finally , the estimated noise level is P(c = 0 ) = 0.00053 . 
	</s>
	

	<s id="103">
		 The ambiguity associated with aligning ’ont’ has been resolved through cepts 4 and 5 . 
	</s>
	

	<s id="104">
		 In our resulting model , P(c=4I’ont’) Pz~ 0.40 while P(c=6I’ont’) Pz~ 0.54 : The MAP assignment forces ’ont’ to be aligned to cept 5 only , and therefore to ’need’ . 
	</s>
	

	<s id="105">
		 Note that although the count for ( need,ont ) is slightly larger than the count for ( they,ont ) ( cf. fig . 
	</s>
	

	<s id="106">
		 5 ) , this is not a trivial result . 
	</s>
	

	<s id="107">
		 The model was able to resolve the fact that they and need had to be aligned to 2 different cepts , rather than eg a larger cept corresponding to a 2-4 alignment , and to produce proper alignments through the use of these cepts . 
	</s>
	

	<s id="108">
		 6 Experiments In order to perform a more systematic evaluation of the use of matrix factorisation for aligning words , we tested this technique on the full trial and test data from the 2003 HLT-NAACL Workshop . 
	</s>
	

	<s id="109">
		 Note that the reference data has both “Sure” and “Probable” alignments , with about 77 % of all alignments in the latter category . 
	</s>
	

	<s id="110">
		 On the other hand , our system proposes only one type of alignment . 
	</s>
	

	<s id="111">
		 The evaluation is done using the performance measures described in 
		<ref citStr="Mihalcea and Pedersen , 2003" id="15" label="CERF" position="16441">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 : precision , recall and F-score on the probable and sure alignments , as well as the Alignment Error Rate ( AER ) , which in our case is a weighted average of the recall on the sure alignments and the precision on the probable . 
	</s>
	

	<s id="112">
		 Given an alignment A and gold standards 9S and 9P ( for sure and probable alignments , respectively ) : PT = IA n 9TI ( 8 ) IAI RT = IA n 9TI ( 9 ) I9TI 2IAn9TI ( 10 ) I9TI + IAI where T is either S or P , and : AER = 1 ^ I 9S I RS + I AI PP ( 11 ) I9SI + IAI Using these measures , we first evaluate the performance on the trial set ( 37 sentences ) : as we produce only one type of alignment and evaluate against “Sure” and “Probable” , we observe , as expected , that the recall is very good on sure alignments , but precision relatively poor , with the reverse situation on the probable alignments ( table 1 ) . 
	</s>
	

	<s id="113">
		 This is because we generate an intermediate number of alignments . 
	</s>
	

	<s id="114">
		 There are 338 sure and 1446 probable alignments ( for 721 French and 661 English words ) in the reference trial data , and we produce 707 ( AIC ) or 766 ( BIC ) alignments with ONMF . 
	</s>
	

	<s id="115">
		 Most of them are at least probably correct , as attested by PP , but only about half of them are in the “Sure” subset , yielding a low value of PS . 
	</s>
	

	<s id="116">
		 Similarly , because “Probable” alignments were generated as the union of alignments produced by two annotators , they sometimes lead to very large MN alignments , which produce on average 2.5 to 2.7 alignments per word . 
	</s>
	

	<s id="117">
		 By contrast ONMF produces less than 1.2 alignments per word , hence the low value of RP . 
	</s>
	

	<s id="118">
		 As the AER is a weighted average of RS and PP , the resulting AER are relatively low for our method . 
	</s>
	

	<s id="119">
		 FT = 2PTRT PT+RT Reference alignments N^best counts . 
	</s>
	

	<s id="120">
		 loisirs de et jouets de besoin ont enfants les NULL . 
	</s>
	

	<s id="121">
		 loisirs de et jouets de besoin ont enfants les NULL Figure 5 : Left : reference alignments , large squares are sure , medium squares are probable ; Right : accumulated counts from IBM4 N-best lists , bigger squares are larger counts . 
	</s>
	

	<s id="122">
		 f^to^cept alignment Resulting alignment . 
	</s>
	

	<s id="123">
		 e^to^cept alignment . 
	</s>
	

	<s id="124">
		 loisirs cept1 cept2 cept3 cept4 cept5 cept6 f^null e^null loisirs de de et et jouets jouets de de besoin besoin ont ont enfants enfants les les NULL NULL Figure 6 : Resulting word-to-cept and word-to-word alignments for sentence 1023 . 
	</s>
	

	<s id="125">
		 Method PS RS FS PP RP FP AER ONMF + AIC ONMF + BIC 45.26 % 94.67 % 61.24 % 86.56 % 34.30 % 49.14 % 10.81 % 42.69 % 96.75 % 59.24 % 83.42 % 35.82 % 50.12 % 12.50 % Table 1 : Performance on the 37 trial sentences for orthogonal non-negative matrix factorisation ( ONMF ) using the AIC and BIC criterion for choosing the number of cepts , discounting null alignments . 
	</s>
	

	<s id="126">
		 We also compared the performance on the 447 test sentences to 1/ the intersection of the alignments produced by the top IBM4 alignments in either directions , and 2/ the best systems from 
		<ref citStr="Mihalcea and Pedersen , 2003" id="16" label="CEPF" position="19473">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 . 
	</s>
	

	<s id="127">
		 On limited resources , Ralign.EF.1 
		<ref citStr="Simard and Langlais , 2003" id="17" label="CEPF" position="19550">
			( Simard and Langlais , 2003 )
		</ref>
		 produced the best F-score , as well as the best AER when NULL alignments were taken into account , while XRCE.Nolem.EF.3 
		<ref citStr="Dejean et al. , 2003" id="18" label="CEPF" position="19696">
			( Dejean et al. , 2003 )
		</ref>
		 produced the best AER when NULL alignments were discounted . 
	</s>
	

	<s id="128">
		 Tables 2 and 3 show that ONMF improves on several of these results . 
	</s>
	

	<s id="129">
		 In particular , we get better recall and F-score on the probable alignments ( and even a better precision than Ralign.EF.1 in table 2 ) . 
	</s>
	

	<s id="130">
		 On the other hand , the performance , and in particular the precision , on sure alignments is dismal . 
	</s>
	

	<s id="131">
		 We attribute this at least partly to a key difference between our model and the reference data : Method PS RS FS PP RP FP AER ONMF + AIC 49.86 % 95.12 % 65.42 % 84.63 % 37.39 % 51.87 % 11.76 % ONMF + BIC 46.50 % 96.01 % 62.65 % 80.92 % 38.69 % 52.35 % 14.16 % IBM4 intersection 71.46 % 90.04 % 79.68 % 97.66 % 28.44 % 44.12 % 5.71 % HLT-03 best F 72.54 % 80.61 % 76.36 % 77.56 % 38.19 % 51.18 % 18.50 % HLT-03 best AER 55.43 % 93.81 % 69.68 % 90.09 % 35.30 % 50.72 % 8.53 % Table 2 : Performance on the 447 English-French test sentences , discounting NULL alignments , for orthogonal non-negative matrix factorisation ( ONMF ) using the AIC and BIC criterion for choosing the number of cepts . 
	</s>
	

	<s id="132">
		 HLT-03 best F is Ralign.EF . 
	</s>
	

	<s id="133">
		 1 and best AER is XRCE.Nolem.EF.3 
		<ref citStr="Mihalcea and Pedersen , 2003" id="19" label="CEPF" position="20911">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 . 
	</s>
	

	<s id="134">
		 our model enforces coverage and makes sure that all words are aligned , while the “Sure” reference alignments have no such constraints and actually have a very bad coverage . 
	</s>
	

	<s id="135">
		 Indeed , less than half the words in the test set have a “Sure” alignment , which means that a method which ensures that all words are aligned will at best have a sub 50 % precision . 
	</s>
	

	<s id="136">
		 In addition , many reference “Probable” alignments are not proper alignments in the sense defined above . 
	</s>
	

	<s id="137">
		 Note that the IBM4 intersection has a bias similar to the sure reference alignments , and performs very well in FS , PP and especially in AER , even though it produces very incomplete alignments . 
	</s>
	

	<s id="138">
		 This points to a particular problem with the AER in the context of our study . 
	</s>
	

	<s id="139">
		 In fact , a system that outputs exactly the set of sure alignments achieves a perfect AER of 0 , even though it aligns only about 23 % of words , clearly an unacceptable drawback in many applications . 
	</s>
	

	<s id="140">
		 We think that this issue may be addressed in two different ways . 
	</s>
	

	<s id="141">
		 One time-consuming possibility would be to post-edit the reference alignment to ensure coverage and proper alignments . 
	</s>
	

	<s id="142">
		 Another possibility would be to use the probabilistic model to mimic the reference data and generate both “Sure” and “Probable” alignments using eg thresholds on the estimated alignment probabilities . 
	</s>
	

	<s id="143">
		 This approach may lead to better performance according to our metrics , but it is not obvious that the produced alignments will be more reasonable or even useful in a practical application . 
	</s>
	

	<s id="144">
		 We also tested our approach on the Romanian- English task of the same workshop , cf. table 4 . 
	</s>
	

	<s id="145">
		 The ’HLT-03 best’ is our earlier work 
		<ref citStr="Dejean et al. , 2003" id="20" label="CEPF" position="22713">
			( Dejean et al. , 2003 )
		</ref>
		 , simply based on IBM4 alignment using an additional lexicon extracted from the corpus . 
	</s>
	

	<s id="146">
		 Slightly better results have been published since 
		<ref citStr="Barbu , 2004" id="21" label="CEPF" position="22878">
			( Barbu , 2004 )
		</ref>
		 , using additional linguistic processing , but those were not presented at the workshop . 
	</s>
	

	<s id="147">
		 Note that the reference alignments for Romanian- English contain only “Sure” alignments , and therefore we only report the performance on those . 
	</s>
	

	<s id="148">
		 In addition , AER = 1^ FS in this setting . 
	</s>
	

	<s id="149">
		 Table 4 shows that the matrix factorisation approach does not offer any quantitative improvements over these results . 
	</s>
	

	<s id="150">
		 A gain of up to 10 points in recall does not offset a large decrease in precision . 
	</s>
	

	<s id="151">
		 As a consequence , the AER for ONMF+AIC is about 10 % higher than in our earlier work . 
	</s>
	

	<s id="152">
		 This seems mainly due to the fact that the ’HLT-03 best’ produces alignments for only about 80 % of the words , while our technique ensure coverage and therefore aligns all words . 
	</s>
	

	<s id="153">
		 These results suggest that remaining 20 % seem particularly problematic . 
	</s>
	

	<s id="154">
		 These quantitative results are disappointing given the sofistication of the method . 
	</s>
	

	<s id="155">
		 It should be noted , however , that ONMF provides the qualitative advantage of producing proper alignments , and in particular ensures coverage . 
	</s>
	

	<s id="156">
		 This may be useful in some contexts , eg training a phrase- based translation system . 
	</s>
	

	<s id="157">
		 7 Discussion 7.1 Model selection and stability Like all mixture models , PLSA is subject to local minima . 
	</s>
	

	<s id="158">
		 Although using a few random restarts seems to yield good performance , the results on difficult-to-align sentences may still be sensitive to initial conditions . 
	</s>
	

	<s id="159">
		 A standard technique to stabilise the EM solution is to use deterministic annealing or tempered EM 
		<ref citStr="Rose et al. , 1990" id="22" label="CEPF" position="24534">
			( Rose et al. , 1990 )
		</ref>
		 . 
	</s>
	

	<s id="160">
		 As a side effect , deterministic annealing actually makes model selection easier . 
	</s>
	

	<s id="161">
		 At low temperature , all components are identical , and they differentiate as the temperature increases , until the final temperature , where we recover the standard EM algorithm . 
	</s>
	

	<s id="162">
		 By keeping track of the component differentiations , we may consider multiple effective numbers of components in one pass , therefore alleviating the need for costly multiple EM runs with different cept numbers and multiple restarts . 
	</s>
	

	<s id="163">
		 7.2 Other association measures ONMF is only a tool to factor the original translation matrix M , containing measures of associations between fz and ej . 
	</s>
	

	<s id="164">
		 The quality of the resulting alignment greatly depends on the way M is Method PS RS FS PP RP FP AER ONMF + AIC 42.88 % 95.12 % 59.11 % 75.17 % 37.20 % 49.77 % 18.63 % ONMF +BIC 40.17 % 96.01 % 56.65 % 72.20 % 38.49 % 50.21 % 20.78 % IBM4 intersection 56.39 % 90.04 % 69.35 % 81.14 % 28.90 % 42.62 % 15.43 % HLT-03 best 72.54 % 80.61 % 76.36 % 77.56 % 36.79 % 49.91 % 18.50 % Table 3 : Performance on the 447 English-French test sentences , taking NULL alignments into account , for orthogonal non-negative matrix factorisation ( ONMF ) using the AIC and BIC criterion for choosing the number of cepts . 
	</s>
	

	<s id="165">
		 HLT-03 best is Ralign.EF.1 
		<ref citStr="Mihalcea and Pedersen , 2003" id="23" label="CEPF" position="25905">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 . 
	</s>
	

	<s id="166">
		 no NULL alignments with NULL alignments Method PS RS FS AER PS RS FS AER ONMF + AIC 70.34 % 65.54 % 67.85 % 32.15 % 62.65 % 62.10 % 62.38 % 37.62 % ONMF + BIC 55.88 % 67.70 % 61.23 % 38.77 % 51.78 % 64.07 % 57.27 % 42.73 % HLT-03 best 82.65 % 62.44 % 71.14 % 28.86 % 82.65 % 54.11 % 65.40 % 34.60 % Table 4 : Performance on the 248 Romanian-English test sentences ( only sure alignments ) , for orthogonal non-negative matrix factorisation ( ONMF ) using the AIC and BIC criterion for choosing the number of cepts . 
	</s>
	

	<s id="167">
		 HLT-03 best is XRCE.Nolem 
		<ref citStr="Mihalcea and Pedersen , 2003" id="24" label="CEPF" position="26500">
			( Mihalcea and Pedersen , 2003 )
		</ref>
		 . 
	</s>
	

	<s id="168">
		 filled . 
	</s>
	

	<s id="169">
		 In our experiments we used counts from N- best alignments obtained from IBM model 4 . 
	</s>
	

	<s id="170">
		 This is mainly used as a proof of concept : other strategies , such as weighting the alignments according to their probability or rank in the N-best list would be natural extensions . 
	</s>
	

	<s id="171">
		 In addition , we are currently investigating the use of translation and distortion tables obtained from IBM model 2 to estimate M at a lower cost . 
	</s>
	

	<s id="172">
		 Ultimately , it would be interesting to obtain association measures mij in a fully non- parametric way , using corpus statistics rather than translation models , which themselves perform some kind of alignment . 
	</s>
	

	<s id="173">
		 We have investigated the use of co-occurrence counts or mutual information between words , but this has so far not proved successful , mostly because common words , such as function words , tend to dominate these measures . 
	</s>
	

	<s id="174">
		 7.3 M-1-0 alignments In our model , cepts ensure that resulting alignments are proper . 
	</s>
	

	<s id="175">
		 There is however one situation in which improper alignments may be produced : If the MAP assigns f-words but no e-words to a cept ( because e-words have more probable cepts ) , we may produce “orphan” cepts , which are aligned to words only on one side . 
	</s>
	

	<s id="176">
		 One way to deal with this situation is simply to remove cepts which display this behaviour . 
	</s>
	

	<s id="177">
		 Orphaned words may then be re-assigned to the remaining cepts , either directly or after retraining PLSA on the remaining cepts ( this is guaranteed to converge as there is an obvious solution for K = 1 ) . 
	</s>
	

	<s id="178">
		 7.4 Independence between sentences One natural comment on our factorisation scheme is that cepts should not be independent between sentences . 
	</s>
	

	<s id="179">
		 However it is easy to show that the factorisation is optimally done on a sentence per sentence basis . 
	</s>
	

	<s id="180">
		 Indeed , what we factorise is the association measures mij . 
	</s>
	

	<s id="181">
		 For a sentence-aligned corpus , the association measure between source and target words from two different sentence pairs should be exactly 0 because words should not be aligned across sentences . 
	</s>
	

	<s id="182">
		 Therefore , the larger translation matrix ( calculated on the entire corpus ) is block diagonal , with non-zero association measures only in blocks corresponding to aligned sentence . 
	</s>
	

	<s id="183">
		 As blocks on the diagonal are mutually orthogonal , the optimal global orthogonal factorisation is identical to the block-based ( ie sentence-based ) factorisation . 
	</s>
	

	<s id="184">
		 Any corpus-induced dependency between alignments from different sentences must therefore be built in the association measure mij , and cannot be handled by the factorisation method . 
	</s>
	

	<s id="185">
		 Note that this is the case in our experiments , as model 4 alignments rely on parameters obtained on the entire corpus . 
	</s>
	

	<s id="186">
		 8 Conclusion In this paper , we view word alignment as 1/ estimating the association between source and target words , and 2/ factorising the resulting association measure into orthogonal , non-negative factors . 
	</s>
	

	<s id="187">
		 For solving the latter problem , we propose an algorithm for ONMF , which guarantees both proper alignments and good coverage . 
	</s>
	

	<s id="188">
		 Experiments carried out on the Hansard give encouraging results , in the sense that we improve in several ways over state-of-the-art results , despite a clear bias in the reference alignments . 
	</s>
	

	<s id="189">
		 Further investigations are required to apply this technique on different association measures , and to measure the influence that ONMF may have , eg on a phrase-based Machine Translation system . 
	</s>
	

	<s id="190">
		 Acknowledgements We acknowledge the Machine Learning group at XRCE for discussions related to the topic of word alignment . 
	</s>
	

	<s id="191">
		 We would like to thank the three anonymous reviewers for their comments . 
	</s>
	

	<s id="192">
		 References H. Akaike . 
	</s>
	

	<s id="193">
		 1974. A new look at the statistical model identification . 
	</s>
	

	<s id="194">
		 IEEE Tr. . 
	</s>
	

	<s id="195">
		 Automatic Control , 19(6):716–723 . 
	</s>
	

	<s id="196">
		 A.-M. Barbu . 
	</s>
	

	<s id="197">
		 2004. Simple linguistic methods for improving a word alignment algorithm . 
	</s>
	

	<s id="198">
		 In Le poids des mots — Proc . 
	</s>
	

	<s id="199">
		 JADT04 , pages 88–98 . 
	</s>
	

	<s id="200">
		 P. F. Brown , S. A. Della Pietra , V. J. Della Pietra , and R. L. Mercer . 
	</s>
	

	<s id="201">
		 1993. The mathematics of statistical machine translation : Parameter estimation . 
	</s>
	

	<s id="202">
		 Computational linguistics , 19:263–312 . 
	</s>
	

	<s id="203">
		 H. Dejean , E. Gaussier , C. Goutte , and K. Yamada . 
	</s>
	

	<s id="204">
		 2003. Reducing parameter space for word alignment . 
	</s>
	

	<s id="205">
		 In HLT-NAACL 2003 Workshop : Building and Using Parallel Texts , pages 23–26 . 
	</s>
	

	<s id="206">
		 A. P. Dempster , N. M. Laird , and D. B. Rubin . 
	</s>
	

	<s id="207">
		 1977. Maximum likelihood from incomplete data via the EM algorithm . 
	</s>
	

	<s id="208">
		 J. Royal Statistical Society , Series B , 39(1):1–38 . 
	</s>
	

	<s id="209">
		 T. Hofmann. 1999 . 
	</s>
	

	<s id="210">
		 Probabilistic latent semantic analysis . 
	</s>
	

	<s id="211">
		 In Uncertainty in Artificial Intelligence , pages 289–296 . 
	</s>
	

	<s id="212">
		 P. Koehn , F. Och , and D. Marcu . 
	</s>
	

	<s id="213">
		 2003. Statistical phrase-based translation . 
	</s>
	

	<s id="214">
		 In Proc . 
	</s>
	

	<s id="215">
		 HLT-NAACL 2003 . 
	</s>
	

	<s id="216">
		 D. D. Lee and H. S. Seung . 
	</s>
	

	<s id="217">
		 1999. Learning the parts of objects by non-negative matrix factorization . 
	</s>
	

	<s id="218">
		 Nature , 401:788–791 . 
	</s>
	

	<s id="219">
		 D. D. Lee and H. S. Seung . 
	</s>
	

	<s id="220">
		 2001. Algorithms for non-negative matrix factorization . 
	</s>
	

	<s id="221">
		 In NIPS*13 , pages 556–562 . 
	</s>
	

	<s id="222">
		 R. Mihalcea and T. Pedersen . 
	</s>
	

	<s id="223">
		 2003. An evaluation exercise for word alignment . 
	</s>
	

	<s id="224">
		 In HLT-NAACL 2003 Workshop : Building and Using Parallel Texts , pages 1–10 . 
	</s>
	

	<s id="225">
		 F. Och and H. Ney . 
	</s>
	

	<s id="226">
		 2000. A comparison of alignment models for statistical machine translation . 
	</s>
	

	<s id="227">
		 In Proc . 
	</s>
	

	<s id="228">
		 COLING’00 , pages 1086–1090 . 
	</s>
	

	<s id="229">
		 F. Och , C. Tillmann , and H. Ney . 
	</s>
	

	<s id="230">
		 1999. Improved alignment models for statistical machine translation . 
	</s>
	

	<s id="231">
		 In Proc . 
	</s>
	

	<s id="232">
		 EMNLP , pages 20–28 . 
	</s>
	

	<s id="233">
		 K. Rose , E. Gurewitz , and G. Fox. 1990 . 
	</s>
	

	<s id="234">
		 A deterministic annealing approach to clustering . 
	</s>
	

	<s id="235">
		 Pattern Recognition Letters , 11(11):589–594 . 
	</s>
	

	<s id="236">
		 G. Schwartz . 
	</s>
	

	<s id="237">
		 1978 . 
	</s>
	

	<s id="238">
		 Estimating the dimension of a model . 
	</s>
	

	<s id="239">
		 The Annals of Statistics , 6(2):461–464 . 
	</s>
	

	<s id="240">
		 M. Simard and P. Langlais . 
	</s>
	

	<s id="241">
		 2003. Statistical translation alignment with compositionality constraints . 
	</s>
	

	<s id="242">
		 In HLT-NAACL 2003 Workshop : Building and Using Parallel Texts , pages 19–22 . 
	</s>
	

	<s id="243">
		 C. Tillmann and F. Xia . 
	</s>
	

	<s id="244">
		 2003. A phrase-based unigram model for statistical machine translation . 
	</s>
	

	<s id="245">
		 In Proc . 
	</s>
	

	<s id="246">
		 HLT-NAACL 2003 . 
	</s>
	

	<s id="247">
		 D. Yarowsky , G. Ngai , and R. Wicentowski . 
	</s>
	

	<s id="248">
		 2001. Inducing multilingual text analysis tools via robust projection across aligned corpora . 
	</s>
	

	<s id="249">
		 In Proc . 
	</s>
	

	<s id="250">
		 HLT 2001. 
	</s>
	


</acldoc>
